{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"DESCRIPTION \u00b6 This is a living document for the HPC component of the MVP on AWS. This is a code repository and a living document describing ideas, \"how-tos\", slides etc. related to the Minimal Viable Product (MVP) to be built for the Genetics Branch (GB) on Cloud One or AWS. Disclaimer : There are two parallel efforts underway for the \"cloudification\" of GB, namely, a. Moving the database management and its web-interface to AWS also referred to as \"the Database component\" and b. Orchestrating NGS analysis workflows on AWS which is also referred to as \"the HPC compotent\" . This repository solely focuses on the HPC component . As MVP, we propose creating a basic RNAseq workflow on AWS using AWS CLI. We would like to use both the following pipelining frameworks: Snakemake Nextflow The code repository will hold the following: Snakemake pipeline Nextflow pipeline Recipes for Docker containers used by the pipeline and This documentation Please send your comments/questions/suggestions to Vishal Koparde .","title":"Background"},{"location":"#description","text":"This is a living document for the HPC component of the MVP on AWS. This is a code repository and a living document describing ideas, \"how-tos\", slides etc. related to the Minimal Viable Product (MVP) to be built for the Genetics Branch (GB) on Cloud One or AWS. Disclaimer : There are two parallel efforts underway for the \"cloudification\" of GB, namely, a. Moving the database management and its web-interface to AWS also referred to as \"the Database component\" and b. Orchestrating NGS analysis workflows on AWS which is also referred to as \"the HPC compotent\" . This repository solely focuses on the HPC component . As MVP, we propose creating a basic RNAseq workflow on AWS using AWS CLI. We would like to use both the following pipelining frameworks: Snakemake Nextflow The code repository will hold the following: Snakemake pipeline Nextflow pipeline Recipes for Docker containers used by the pipeline and This documentation Please send your comments/questions/suggestions to Vishal Koparde .","title":"DESCRIPTION"},{"location":"MVP/links/","text":"Useful links \u00b6 Here we maintain a list of tutorials, workshops, how-tos, guides, documentations, and other valuable web-resources that may be useful directly towards the implementations and orchestration of the AWS HPC MVP project. Nextflow training workshop Snakemake tutorial videos","title":"Links"},{"location":"MVP/links/#useful-links","text":"Here we maintain a list of tutorials, workshops, how-tos, guides, documentations, and other valuable web-resources that may be useful directly towards the implementations and orchestration of the AWS HPC MVP project. Nextflow training workshop Snakemake tutorial videos","title":"Useful links"},{"location":"MVP/workflow/","text":"Overview \u00b6 RNAseq is one the most common NGS datatypes. It typically comes in two flavors: total RNAseq polyA RNAseq The core of most RNAseq data analysis workflows are mostly identical involving the following steps: trim fastq reads align trimmed reads to genome using split aware aligner count reads-per-gene based on existing gene model collect QC metrics at various stages The above steps assume that one already has a pre-built genomic index to align the trimmed fastq reads against. If you do not have such index, the genomic sequence in FASTA format and gene annotations in GTF format are required to generate a index prior to alignment. The follow graphic depicts the basic workflow that we will attempt to create on AWS: The inputs will be read from a s3 bucket and the outputs will be written to the same s3 bucket. Individual dockers will be created for various steps of the pipeline as described below: Pipeline Step Tool in Docker DockerHub Link Trim CutAdapt 1 ccrgb_cutadapt_v1.18 Align STAR 2 ccrgb_star_v2.7.10a BuildIndex STAR 2 ccrgb_star_v2.7.10a Count RSEM 3 ccrgb_star_v2.7.10a Report MultiQC 4 ccrgb_multiqc_v1.12 Inputs \u00b6 The inputs for the pipeline can be broadly be classified into: inputs required to create the index for mapping, i.e., genomic FASTA file and its gene annotations file (GTF) raw FASTQ reads per sample Fasta \u00b6 This is the genome in FASTA format. We will be using hg38 version of the human genome for our purposes and it can be downloaded from here . GTF \u00b6 GTF or Gene Transfer Format is a file which includes all the gene annotations or gene models. This includes the information about the location of the genes and their splicing events. We will use the GENCODEs release 38 for this. FASTQ \u00b6 Paired end (PE) FASTQ files per sample will be provided as input. which dataset to use as test input is TBD Outputs \u00b6 The pipeline is expected to produce 2 primary outputs: CountsMatrix \u00b6 This is a tab-delimited file with nsample + 1 number of columns (first column is the gene identifier and it is followed by one column per sample of counts data) and ngenes + 1 number of rows (first row is the header containing sample names and every subsequent row gives counts per gene tab-delimited for each sample). Report \u00b6 Basic stats are collected to generated a HTML report using MultiQC . Pipelining frameworks \u00b6 There are 3 or 4 pipelining frameworks which are popular among bioinformatic community, specifically for NGS data analysis. CCBR has successfully used Snakemake 5 for the past few years to execute reproducible NGS data analysis on the Biowulf HPC cluster. We will be leveraging this extensive experience to build a Snakemake-based pipeline for the above outlined workflow to be run on the AWS cloud specifically using AWS Genomics CLI . In addition to Snakemake, a Nextflow -based pipeline will also be built to mimic the same tasks achieved by the previously mentioned Snakemake-based workflow. The major reasons for this repetition of efforts are: AWS Genomic CLI adaptation of Nextflow seems more mature than Snakemake. Nextflow workflows seemed to be more widely accepted eg. SBG , DNAnexus , etc. Assess differences in building workflows in Snakemake vs Nextflow. This insight will be valuable in shaping future pipeline-development directions we take. Snakemake \u00b6 We will be using CCBR's RNAseq repository as reference to build our MVP workflow in Snakemake. Nextflow \u00b6 We will be using Nfcore's RNAseq pipeline as a reference to build our MVP workflow in Nextflow References \u00b6 1 http://dx.doi.org/10.14806/ej.17.1.200 2 http://dx.doi.org/10.1093/bioinformatics/bts635 3 https://doi.org/10.1186/1471-2105-12-32 4 http://dx.doi.org/10.1093/bioinformatics/btw354 5 https://doi.org/10.12688/f1000research.29032.2","title":"Workflow"},{"location":"MVP/workflow/#overview","text":"RNAseq is one the most common NGS datatypes. It typically comes in two flavors: total RNAseq polyA RNAseq The core of most RNAseq data analysis workflows are mostly identical involving the following steps: trim fastq reads align trimmed reads to genome using split aware aligner count reads-per-gene based on existing gene model collect QC metrics at various stages The above steps assume that one already has a pre-built genomic index to align the trimmed fastq reads against. If you do not have such index, the genomic sequence in FASTA format and gene annotations in GTF format are required to generate a index prior to alignment. The follow graphic depicts the basic workflow that we will attempt to create on AWS: The inputs will be read from a s3 bucket and the outputs will be written to the same s3 bucket. Individual dockers will be created for various steps of the pipeline as described below: Pipeline Step Tool in Docker DockerHub Link Trim CutAdapt 1 ccrgb_cutadapt_v1.18 Align STAR 2 ccrgb_star_v2.7.10a BuildIndex STAR 2 ccrgb_star_v2.7.10a Count RSEM 3 ccrgb_star_v2.7.10a Report MultiQC 4 ccrgb_multiqc_v1.12","title":"Overview"},{"location":"MVP/workflow/#inputs","text":"The inputs for the pipeline can be broadly be classified into: inputs required to create the index for mapping, i.e., genomic FASTA file and its gene annotations file (GTF) raw FASTQ reads per sample","title":"Inputs"},{"location":"MVP/workflow/#fasta","text":"This is the genome in FASTA format. We will be using hg38 version of the human genome for our purposes and it can be downloaded from here .","title":"Fasta"},{"location":"MVP/workflow/#gtf","text":"GTF or Gene Transfer Format is a file which includes all the gene annotations or gene models. This includes the information about the location of the genes and their splicing events. We will use the GENCODEs release 38 for this.","title":"GTF"},{"location":"MVP/workflow/#fastq","text":"Paired end (PE) FASTQ files per sample will be provided as input. which dataset to use as test input is TBD","title":"FASTQ"},{"location":"MVP/workflow/#outputs","text":"The pipeline is expected to produce 2 primary outputs:","title":"Outputs"},{"location":"MVP/workflow/#countsmatrix","text":"This is a tab-delimited file with nsample + 1 number of columns (first column is the gene identifier and it is followed by one column per sample of counts data) and ngenes + 1 number of rows (first row is the header containing sample names and every subsequent row gives counts per gene tab-delimited for each sample).","title":"CountsMatrix"},{"location":"MVP/workflow/#report","text":"Basic stats are collected to generated a HTML report using MultiQC .","title":"Report"},{"location":"MVP/workflow/#pipelining-frameworks","text":"There are 3 or 4 pipelining frameworks which are popular among bioinformatic community, specifically for NGS data analysis. CCBR has successfully used Snakemake 5 for the past few years to execute reproducible NGS data analysis on the Biowulf HPC cluster. We will be leveraging this extensive experience to build a Snakemake-based pipeline for the above outlined workflow to be run on the AWS cloud specifically using AWS Genomics CLI . In addition to Snakemake, a Nextflow -based pipeline will also be built to mimic the same tasks achieved by the previously mentioned Snakemake-based workflow. The major reasons for this repetition of efforts are: AWS Genomic CLI adaptation of Nextflow seems more mature than Snakemake. Nextflow workflows seemed to be more widely accepted eg. SBG , DNAnexus , etc. Assess differences in building workflows in Snakemake vs Nextflow. This insight will be valuable in shaping future pipeline-development directions we take.","title":"Pipelining frameworks"},{"location":"MVP/workflow/#snakemake","text":"We will be using CCBR's RNAseq repository as reference to build our MVP workflow in Snakemake.","title":"Snakemake"},{"location":"MVP/workflow/#nextflow","text":"We will be using Nfcore's RNAseq pipeline as a reference to build our MVP workflow in Nextflow","title":"Nextflow"},{"location":"MVP/workflow/#references","text":"1 http://dx.doi.org/10.14806/ej.17.1.200 2 http://dx.doi.org/10.1093/bioinformatics/bts635 3 https://doi.org/10.1186/1471-2105-12-32 4 http://dx.doi.org/10.1093/bioinformatics/btw354 5 https://doi.org/10.12688/f1000research.29032.2","title":"References"}]}